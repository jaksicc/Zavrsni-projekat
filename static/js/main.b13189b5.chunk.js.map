{"version":3,"sources":["service.js","components/Categories/StyledCategories.jsx","components/Categories/Categories.jsx","components/Glasses/StyledGlass.jsx","components/Categories/Category.jsx","components/Categories/StyledCategory.jsx","components/Glasses/StyledGlasses.jsx","components/Glasses/Glasses.jsx","components/Glasses/Glass.jsx","components/Ingredients/StyledIngredients.jsx","components/Ingredients/Ingredients.jsx","components/Ingredients/Ingredient.jsx","components/CocktailInfo/StyledCocktailInfo.jsx","components/CocktailInfo/CocktailInfo.jsx","components/RandomCocktail.jsx","components/IngredientInfo.jsx","components/LoginRegister/StyledLogin.jsx","components/LoginRegister/Login.jsx","components/LoginRegister/Register.jsx","components/Header/StyledHeader.jsx","components/Header/Header.jsx","components/Alcoholics/Alcoholic.jsx","components/Alcoholics/StyledAlcoholics.jsx","components/Alcoholics/Alcoholics.jsx","components/DrinkByName.jsx","components/DrinksByLetter.jsx","components/IngredientByName.jsx","components/StyledSearch.jsx","components/SearchDrink.jsx","App.js","index.js"],"names":["getIngredientInfo","ingredient","axios","get","getIngredientImg","getUsers","StyledCategories","styled","div","Categories","categories","user","map","category","to","strCategory","split","join","StyledGlass","Category","useParams","useState","cat","setCat","newCategory","console","log","useEffect","getCategory","then","res","data","drinks","idDrink","strDrink","src","strDrinkThumb","StyledGlasses","Glasses","glasses","glass","strGlass","Glass","drinksbyglass","setDrinksByGlass","filterByGlass","drink","alt","StyledIngredients","Ingredients","ingredients","strIngredient1","Ingredient","drinksbyingredient","setDrinksByIngredient","searchDrinksByIngredient","StyledCoctailInfo","CocktailInfo","id","cocktaildetails","setCocktailDetails","getCocktailById","strAlcoholic","strMeasure1","strIngredient2","strMeasure2","strIngredient3","strMeasure3","strInstructions","strInstructionsDE","strInstructionsFR","strInstructionsES","strInstructionsIT","RandomCocktail","randomcocktail","setRandomCocktail","history","useHistory","onClick","push","cocktail","IngredientInfo","name","ingredientinfo","setIngredientInfo","ingredientimg","setIngredientImg","config","url","info","strIngredient","strDescription","StyledLoginRegister","Login","setUser","username","setUsername","password","setPassword","StyledLogin","onSubmit","e","preventDefault","find","el","window","alert","className","htmlFor","type","placeholder","onChange","target","value","Register","email","setEmail","userExists","length","includes","isValid","post","postUser","StyledHeader","Header","style","padding","Alcoholic","alcoholic","drinksbyalcoholic","setDrinksByAlcoholic","filterByAlcoholic","StyledAlcoholics","Alcoholics","alcoholics","alcohol","DrinkByName","drinkbyname","DrinksByLetter","drinksbyletter","IngredientByName","ingredientbyname","StyledSearch","SearchDrink","drinkname","setDrinkName","setDrinkByName","ingredientname","setIngredientName","setIngredientByName","letter","setLetter","setDrinksByLetter","maxLength","getDrinksByFirstLetter","App","setCategories","setGlasses","setIngredients","setAlcoholics","basename","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b13189b5.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n\r\n//https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list        LISTA SVIH KATEGORIJA PICA\r\n\r\nexport const getAllCategories = () => {\r\n    return axios.get(\"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\")\r\n}\r\n\r\n\r\nexport const getCategory = (category) => {\r\n    return axios.get(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`)\r\n}\r\n\r\n\r\n// https://www.thecocktaildb.com/api/json/v1/1/list.php?g=list          LISTA SVIH CASA\r\n\r\nexport const getAllGlasses = () => {\r\n    return axios.get('https://www.thecocktaildb.com/api/json/v1/1/list.php?g=list')\r\n}\r\n\r\nexport const filterByGlass = (glass) => {\r\n    return axios.get(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?g=${glass}`)\r\n}\r\n\r\n\r\n// https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list          LISTA SVIH SASTOJAKA\r\n\r\nexport const getAllIngredients = () => {\r\n    return axios.get('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list')\r\n}\r\n\r\nexport const searchDrinksByIngredient = (ingredient) => {\r\n    return axios.get(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredient}`)\r\n}\r\n\r\n\r\n// https://www.thecocktaildb.com/api/json/v1/1/list.php?a=list LISTA ALKOHOLNIH I NEALKOHOLINH PICA\r\n\r\nexport const getByAlcohol = () => {\r\n    return axios.get('https://www.thecocktaildb.com/api/json/v1/1/list.php?a=list')\r\n}\r\n\r\nexport const filterByAlcoholic = (alcoholic) => {\r\n    return axios.get(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=${alcoholic}`)\r\n}\r\n\r\n// dohvatanje detaljnih informacija o koktelu\r\nexport const getCocktailById = (id) => {\r\n    return axios.get(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`)\r\n}\r\n\r\n\r\n// RANDOM COCKTAIL INFO\r\n\r\nexport const getRandomCocktail = () => {\r\n    return axios.get('https://www.thecocktaildb.com/api/json/v1/1/random.php')\r\n}\r\n\r\n// SEARCH INGREDIENT BY NAME\r\n\r\nexport const getIngredientInfo = (ingredient) => {\r\n    return axios.get(`https://www.thecocktaildb.com/api/json/v1/1/search.php?i=${ingredient}`)\r\n}\r\n\r\nexport const getIngredientImg = (ingredient) => {\r\n    return axios.get(`https://www.thecocktaildb.com/images/ingredients/${ingredient}-Medium.png`)\r\n}\r\n\r\n// Drink by name/first letter\r\n\r\nexport const getDrinkByName = (name) => {\r\n    return axios.get(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${name}`)\r\n}\r\n\r\nexport const getDrinksByFirstLetter = (letter) => {\r\n    return axios.get(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${letter}`)\r\n}\r\n\r\n\r\n\r\n\r\n// LOGIN I REGISTER\r\n\r\nexport const getUsers = () => {\r\n    return axios.get('https://my-json-server.typicode.com/jaksicc/zavrsni-users-api-server/users')\r\n}\r\n\r\nexport const postUser = (username, email, password) => {\r\n    return axios.post('http://localhost:3005/users', {username, email, password})\r\n}\r\n////////////////////////////////////////////\r\n\r\n\r\n\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCategories = styled.div`\r\n    \r\n    /* border: 1px solid black; */\r\n    /* background-color:white; */\r\n    margin: 20px;\r\n    z-index: 2;\r\n\r\n    p{\r\n        font-size:large;\r\n        color:white;\r\n    }\r\n    \r\n    \r\n\r\n    \r\n    \r\n`\r\n\r\nexport default StyledCategories","import { Link, Redirect } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport StyledCategories from \"./StyledCategories\"\r\n\r\nconst Categories = ({ categories, user }) => {\r\n\r\n    return user? (\r\n        <>\r\n            {categories.map(category => <StyledCategories key={category.strCategory}>\r\n\r\n                <Link to={`/categories/${(category.strCategory).split('/').join('-')}`}><p>{category.strCategory}</p></Link>\r\n\r\n            </StyledCategories>)}\r\n        </>\r\n    )\r\n    :\r\n    (\r\n\r\n        <Redirect to='/login'></Redirect>\r\n    )\r\n}\r\n\r\nexport default Categories","import styled from \"styled-components\";\r\n\r\nconst StyledGlass = styled.div`\r\n    display:inline-block;\r\n    margin:30px;\r\n    align-items:center;\r\n    justify-content:center;\r\n    text-align:center;\r\n    background-color:white;\r\n    width: 18%;\r\n    height:50%;\r\n    /* margin: auto; */\r\n    \r\n    /* img{\r\n        width:100%;\r\n    } */\r\n`\r\n\r\nexport default StyledGlass","import { useEffect, useState } from \"react\"\r\nimport { Link, useParams } from \"react-router-dom\"\r\nimport { getCategory } from \"../../service\"\r\nimport StyledGlass from \"../Glasses/StyledGlass\"\r\nimport StyledCategory from \"./StyledCategory\"\r\n\r\nconst Category = () => {\r\n\r\n    let { category } = useParams()\r\n    const [cat, setCat] = useState([])\r\n    let newCategory = category.split('-').join('/')\r\n    console.log(category)\r\n    console.log(newCategory)\r\n\r\n    useEffect(() => {\r\n        getCategory(newCategory).then(res => {\r\n            setCat(res.data.drinks)\r\n\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {cat.map(cat => <StyledGlass key={cat.strDrink}>\r\n            <Link to={`/categories/item/${cat.idDrink}`} >\r\n                <p>{cat.strDrink}</p>\r\n                <img src={`${cat.strDrinkThumb}/preview`} />\r\n            </Link>\r\n            {/* <div className='ime'>\r\n            <p>{cat.strDrink}</p>\r\n            </div> */}\r\n            </StyledGlass>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Category","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledCategory = styled.div`\r\n    display:inline-block;\r\n    align-items:center;\r\n    justify-content:center;\r\n    align-self:center;\r\n    width: fit-content;\r\n    background-color: white;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n    margin-bottom: 25px;\r\n    \r\n    /* border:3px solid black; */\r\n    p{\r\n        font-style:oblique;\r\n        font-size:larger;\r\n        font-weight:50;\r\n        align-self:auto;\r\n        text-align-last:center;\r\n        justify-content:center\r\n        \r\n    }\r\n    img{\r\n        width:300px;\r\n        border:3px solid black;\r\n        border-radius: 20px;\r\n        /* margin-left:40px;\r\n        margin: 20px; */\r\n        margin: 40px\r\n        \r\n        \r\n        \r\n    }\r\n    .ime{\r\n        text-align: center;\r\n        padding: 10px 20px\r\n    }\r\n\r\n`\r\n\r\nexport default StyledCategory","import styled from \"styled-components\";\r\n\r\nconst StyledGlasses = styled.div`\r\n    display:inline-block;\r\n    margin: 20px;\r\n    z-index: 2;\r\n\r\n    p{\r\n        font-size:large;\r\n        color:white;\r\n    }\r\n`\r\n\r\nexport default StyledGlasses","import { Link, Redirect } from \"react-router-dom\"\r\nimport StyledGlasses from \"./StyledGlasses\"\r\n\r\nconst Glasses = ({ glasses, user }) => {\r\n    return user? (\r\n        <>\r\n            {glasses.map(glass => <StyledGlasses key={glass.strGlass}>\r\n                <Link to={`/glasses/${glass.strGlass}`}><p>{glass.strGlass}</p></Link>\r\n            </StyledGlasses>)}\r\n\r\n        </>\r\n    )\r\n    :\r\n    <Redirect to=\"/login\"></Redirect>\r\n}\r\n\r\nexport default Glasses","import { useEffect, useState } from \"react\"\r\nimport { Link, useParams } from \"react-router-dom\"\r\nimport { filterByGlass } from \"../../service\"\r\nimport StyledGlass from \"./StyledGlass\"\r\n\r\nconst Glass = () => {\r\n\r\n    let { glass } = useParams()\r\n    const [drinksbyglass, setDrinksByGlass] = useState([])\r\n\r\n    useEffect(() => {\r\n        filterByGlass(glass).then(res => {\r\n            setDrinksByGlass(res.data.drinks)\r\n            console.log(res.data.drinks)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {drinksbyglass.map(drink => <StyledGlass key={drink.strDrink}>\r\n\r\n                <Link to={`/categories/item/${drink.idDrink}`} >\r\n                    <p>{drink.strDrink}</p>\r\n                    <img src={`${drink.strDrinkThumb}/preview`} alt=\"\" />\r\n\r\n                </Link>\r\n            </StyledGlass>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Glass","import styled from \"styled-components\";\r\n\r\nconst StyledIngredients = styled.div`\r\n\r\n    display:inline-block;\r\n    width:20%;\r\n    margin:20px;\r\n    /* background-color:white; */\r\n    align-items:center;\r\n    justify-content:center;\r\n    text-align-last:center;\r\n\r\n    p{\r\n        margin: 0px;\r\n       color:white;\r\n       font-size:large;\r\n        \r\n    }\r\n`\r\n\r\nexport default StyledIngredients","import { Link, Redirect } from \"react-router-dom\"\r\nimport StyledIngredients from './StyledIngredients'\r\n\r\nconst Ingredients = ({ingredients, user}) => {\r\n    return user? (\r\n        <>\r\n        {ingredients.map(ingredient => <StyledIngredients key={ingredient.strIngredient1}>\r\n            <Link to={`/ingredients/${ingredient.strIngredient1}`}><p>{ingredient.strIngredient1}</p></Link>\r\n            <Link to={`/ingredients/info/${ingredient.strIngredient1}`}><p>Ingredient info</p></Link>\r\n        </StyledIngredients>)}\r\n        </>\r\n    )\r\n    :\r\n    <Redirect to=\"/login\"></Redirect>\r\n}\r\n\r\nexport default Ingredients","import { useEffect, useState } from \"react\"\r\nimport { Link, useParams } from \"react-router-dom\"\r\nimport { searchDrinksByIngredient } from \"../../service\"\r\nimport StyledGlass from \"../Glasses/StyledGlass\"\r\n\r\nconst Ingredient = () => {\r\n\r\n    let { ingredient } = useParams()\r\n    const [drinksbyingredient, setDrinksByIngredient] = useState([])\r\n\r\n    useEffect(() => {\r\n        searchDrinksByIngredient(ingredient).then(res => {\r\n            setDrinksByIngredient(res.data.drinks)\r\n        })\r\n    }, [])\r\n    return (\r\n        <>\r\n        {drinksbyingredient.map(drink => <StyledGlass key={drink.strDrink}>\r\n            <Link to={`/categories/item/${drink.idDrink}`} >\r\n            <p>{drink.strDrink}</p>\r\n            <img src={`${drink.strDrinkThumb}/preview`} alt=\"\"/>\r\n        </Link>\r\n        </StyledGlass>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Ingredient","import styled from \"styled-components\";\r\n\r\nconst StyledCoctailInfo = styled.div`\r\n    /* display:inline-block; */\r\n    align-items:center;\r\n    justify-content:center;\r\n    text-align-last:center;\r\n    border: 3px solid black;\r\n    background-color: white;\r\n    width: 60%;\r\n    margin: auto;\r\n    border-radius: 20px;\r\n    \r\n    \r\n\r\n    img{\r\n        width:400px;\r\n        border-radius:20px;\r\n        max-width: 100%;\r\n        height: auto;\r\n    }\r\n    p{\r\n        margin:10px;\r\n\r\n        \r\n    }\r\n`\r\n\r\nexport default StyledCoctailInfo","import { useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { getCocktailById } from \"../../service\"\r\nimport StyledCoctailInfo from \"./StyledCocktailInfo\"\r\n\r\nconst CocktailInfo = () => {\r\n\r\n    let { id } = useParams()\r\n    const [cocktaildetails, setCocktailDetails] = useState([])\r\n    console.log(id)\r\n    useEffect(() => {\r\n        getCocktailById(id).then(res => {\r\n            setCocktailDetails(res.data.drinks)\r\n        })\r\n    }, [])\r\n    // console.log(cocktaildetails)\r\n    return (\r\n        <>\r\n            {cocktaildetails.map(drink => <StyledCoctailInfo key={drink.strDrink}>\r\n                <p>Cocktail name: {drink.strDrink}</p>\r\n                <img src={drink.strDrinkThumb}  />\r\n                <p>Alcoholic/Non alcoholic: {drink.strAlcoholic}</p>\r\n                <p>Cocktail category: {drink.strCategory}</p>\r\n                <p>Glass: {drink.strGlass}</p>\r\n                <p>Ingredient 1 : {drink.strIngredient1} | Measure 1 : {drink.strMeasure1}</p>\r\n                <p>Ingredient 2 : {drink.strIngredient2} | Measure 2 : {drink.strMeasure2}</p>\r\n                <p>Ingredient 3 : {drink.strIngredient3} | Measure 3 : {drink.strMeasure3}</p>\r\n\r\n                {drink.strInstructions ?<p>Instructions(EN): {drink.strInstructions}</p>:null}\r\n\r\n                {drink.strInstructionsDE ?<p>Instructions(DE): {drink.strInstructionsDE}</p>:null}\r\n                \r\n                {drink.strInstructionsFR ?<p>Instructions(FR): {drink.strInstructionsFR}</p>:null}\r\n\r\n                {drink.strInstructionsES ?<p>Instructions(ES): {drink.strInstructionsES}</p>:null}\r\n\r\n                {drink.strInstructionsIT ?<p>Instructions(IT): {drink.strInstructionsIT}</p>:null}\r\n\r\n\r\n\r\n            </StyledCoctailInfo>)}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CocktailInfo","import { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { getRandomCocktail } from \"../service\"\r\nimport StyledCoctailInfo from \"./CocktailInfo/StyledCocktailInfo\"\r\n\r\nconst RandomCocktail = () => {\r\n\r\n    const [randomcocktail, setRandomCocktail] = useState([])\r\n\r\n    let history = useHistory()\r\n\r\n    return (\r\n        <>\r\n        <button onClick={()=>{\r\n            getRandomCocktail().then(res => {\r\n                setRandomCocktail(res.data.drinks)\r\n                history.push('/random')\r\n\r\n            })\r\n        }}>Random Drink</button>\r\n        {randomcocktail.map(cocktail => <StyledCoctailInfo key={cocktail.strDrink}>\r\n            <p>Cocktail name: {cocktail.strDrink}</p>\r\n            <img src={cocktail.strDrinkThumb} alt=\"\"/>\r\n            <p>Cocktail category: {cocktail.strCategory}</p>\r\n            <p>Alcoholic/Non alcoholic: {cocktail.strAlcoholic}</p>\r\n            <p>Glass: {cocktail.strGlass}</p>\r\n            <p>Ingredient 1 : {cocktail.strIngredient1} | Measure 1 : {cocktail.strMeasure1}</p>\r\n            <p>Ingredient 2 : {cocktail.strIngredient2} | Measure 2 : {cocktail.strMeasure2}</p>\r\n            <p>Ingredient 3 : {cocktail.strIngredient3} | Measure 3 : {cocktail.strMeasure3}</p>\r\n            <p>Instructions (EN) : {cocktail.strInstructions}</p>\r\n        </StyledCoctailInfo>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RandomCocktail","import { useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { getIngredientImg, getIngredientInfo } from \"../service\"\r\nimport StyledCoctailInfo from \"./CocktailInfo/StyledCocktailInfo\"\r\n\r\n\r\nconst IngredientInfo = () => {\r\n\r\n    let { name } = useParams()\r\n    const [ingredientinfo, setIngredientInfo] = useState([])\r\n    const [ingredientimg, setIngredientImg] = useState()\r\n    console.log(name)\r\n\r\n    useEffect(() => {\r\n        getIngredientInfo(name).then(res => {\r\n            setIngredientInfo(res.data.ingredients)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getIngredientImg(name).then(res => {\r\n            setIngredientImg(res.config.url)\r\n        })\r\n    }, [])\r\n    console.log(ingredientimg)\r\n\r\n    return (\r\n        <>\r\n            {ingredientinfo.map(info => <StyledCoctailInfo key={info.strIngredient}>\r\n                <p>{info.strIngredient}</p>\r\n                <img src={ingredientimg} alt=\"\"/>\r\n                <p>{info.strDescription}</p>\r\n            </StyledCoctailInfo>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IngredientInfo","import styled from \"styled-components\";\r\n\r\nconst StyledLoginRegister = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    background-color:white;\r\n    width:auto;\r\n    width:400px;\r\n    margin:auto;\r\n    height:350px;\r\n    border-radius:10px;\r\n\r\n    form{\r\n        justify-content:center;\r\n        align-items:center;\r\n        text-align-last:center;\r\n    }\r\n    .logreg{\r\n        margin:20px;\r\n    }\r\n`\r\n\r\nexport default StyledLoginRegister","import { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { getUsers } from \"../../service\"\r\nimport StyledLogin from \"./StyledLogin\"\r\n\r\nconst Login = ({ setUser }) => {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n\r\n    return (\r\n        <StyledLogin>\r\n        <form onSubmit={(e) => {\r\n            e.preventDefault()\r\n            getUsers().then(res => {\r\n                let user = res.data.find(el => el.username === username && el.password === password)\r\n                if (user) {\r\n                    setUser(user)\r\n                    history.push('/')\r\n                }\r\n                else {\r\n                    window.alert('Niste registrovani')\r\n                }\r\n            })\r\n        }}>\r\n            <h3>Login</h3>\r\n            <div className='logreg'>\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\r\n            </div>\r\n            <div className='logreg'>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n            </div>\r\n            <input type=\"submit\" />\r\n\r\n        </form>\r\n        </StyledLogin>\r\n    )\r\n}\r\n\r\nexport default Login","import { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { getUsers, postUser } from \"../../service\"\r\nimport StyledLoginRegister from \"./StyledLogin\"\r\n\r\nconst Register = () => {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    const isValid = (username, email, password) => {\r\n        if (username.length > 4 && email.includes('@') && email.includes('.') && password.length > 4)\r\n            return true\r\n    }\r\n\r\n    let history = useHistory()\r\n\r\n    return (\r\n        <StyledLoginRegister>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault()\r\n                getUsers().then(res => {\r\n\r\n                    console.log(username, email, password)\r\n                    let userExists = res.data.find(el => el.username === username || el.email === email)\r\n                    console.log(userExists)\r\n                    if (userExists) {\r\n                        window.alert('Username or email allready taken')\r\n                    }\r\n                    else if (isValid(username, email, password)) {\r\n                        postUser(username, email, password)\r\n                        setUsername('')\r\n                        setEmail('')\r\n                        setPassword('')\r\n                        window.alert('Successfully registered')\r\n                        history.push('/categories')\r\n                    }\r\n                    else {\r\n                        window.alert('Username, email or password are not valid')\r\n                    }\r\n                })\r\n            }}>\r\n                <h3>Register</h3>\r\n                <div className='logreg'>\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input value={username} type=\"text\" name=\"username\" placeholder=\"username\" onChange={(e) => setUsername(e.target.value)} />\r\n                </div>\r\n                <div className='logreg'>\r\n                    <label htmlFor=\"email\">E-mail</label>\r\n                    <input value={email} type=\"text\" name=\"email\" placeholder=\"email\" onChange={(e) => setEmail(e.target.value)} />\r\n                </div>\r\n                <div className='logreg'>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input value={password} type=\"password\" name=\"password\" placeholder=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                </div>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        </StyledLoginRegister>\r\n    )\r\n}\r\n\r\nexport default Register","import styled from \"styled-components\";\r\nimport Link from 'react-router-dom'\r\n\r\nconst StyledHeader = styled.div`\r\n    height:180px;\r\n    color:white;\r\n    position: relative;\r\n\r\n    h1{\r\n        color:goldenrod;\r\n        text-align:center;\r\n        font-size:50px;\r\n        font-family:fantasy;\r\n        \r\n        \r\n    }\r\n    h3{\r\n        display:inline;\r\n    }\r\n    button{\r\n        display:block;\r\n    }\r\n    /* nav{\r\n        display:flex;\r\n        right:0px;\r\n    } */\r\n    .loggedout{\r\n        position:absolute;\r\n        /* display:inline; */\r\n        right:0;\r\n    }\r\n\r\n    p{\r\n        color:white;\r\n        display:inline;\r\n        font-size:large\r\n    }\r\n\r\n`\r\nexport default StyledHeader\r\n","import { Link } from \"react-router-dom\"\r\nimport RandomCocktail from \"../RandomCocktail\"\r\nimport StyledHeader from '../Header/StyledHeader'\r\n\r\nconst Header = ({user, setUser}) => {\r\n    return (\r\n        <StyledHeader>\r\n            <h1>DRINKS.com</h1>\r\n            <hr/>\r\n            <nav>\r\n                {user ?\r\n                    <div className='loggedin'>\r\n                        <h3>User: {user.username}</h3>\r\n                        <button onClick={()=>setUser(null)}>Logout</button>\r\n                        <Link style={{ padding: 5 }} to='/categories'><p>Categories</p></Link>\r\n                        <Link style={{ padding: 5 }} to='/glasses'><p>Glasses</p></Link>\r\n                        <Link style={{ padding: 5 }} to='/ingredients'><p>Ingredients</p></Link>\r\n                        <Link style={{ padding: 5 }} to='/alcoholics'><p>Alcoholic/Non Alcoholic</p></Link>\r\n                        <Link style={{ padding: 5 }} to='/random'><p>Random Drink</p></Link>\r\n                        <Link style={{ padding: 5 }} to='/search'><p>Search Drink</p></Link>\r\n                    </div>\r\n                    :\r\n                    <div className='loggedout'>\r\n                        <Link style={{ padding: 5 }} to=\"/login\"><p>Login</p></Link>\r\n                        <Link style={{ padding: 5 }} to=\"/register\"><p>Register</p></Link>\r\n                    </div>\r\n\r\n                }\r\n            </nav>\r\n            \r\n        </StyledHeader>\r\n    )\r\n}\r\n\r\nexport default Header","import { useEffect, useState } from \"react\"\r\nimport { Link, useParams } from \"react-router-dom\"\r\nimport { filterByAlcoholic } from \"../../service\"\r\nimport StyledGlass from \"../Glasses/StyledGlass\"\r\n\r\n\r\nconst Alcoholic = () => {\r\n\r\n    let { alcoholic } = useParams()\r\n    const [drinksbyalcoholic, setDrinksByAlcoholic] = useState([])\r\n\r\n    useEffect(() => {\r\n        filterByAlcoholic(alcoholic).then(res => {\r\n            setDrinksByAlcoholic(res.data.drinks)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        {drinksbyalcoholic.map(drink => <StyledGlass key={drink.strDrink}>\r\n            <Link to={`/categories/item/${drink.idDrink}`} >\r\n            <p>{drink.strDrink}</p>\r\n            <img src={`${drink.strDrinkThumb}/preview`} />\r\n        </Link>\r\n        </StyledGlass>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Alcoholic","import styled from \"styled-components\";\r\n\r\nconst StyledAlcoholics = styled.div`\r\n    p{\r\n        color:white;\r\n        font-size:large;\r\n        margin:20px;\r\n    }\r\n`\r\n\r\nexport default StyledAlcoholics\r\n","import { Link, Redirect } from \"react-router-dom\"\r\nimport StyledAlcoholics from \"./StyledAlcoholics\"\r\n\r\nconst Alcoholics = ({ alcoholics, user }) => {\r\n    return user? (\r\n        <>\r\n            {alcoholics.map(alcohol => <StyledAlcoholics key={alcohol.strAlcoholic}>\r\n                <Link to={`/alcoholics/${alcohol.strAlcoholic}`}><p>{alcohol.strAlcoholic}</p></Link>\r\n            </StyledAlcoholics>)}\r\n        </>\r\n    )\r\n    :\r\n    <Redirect to=\"/login\"></Redirect>\r\n}\r\n\r\nexport default Alcoholics","import { Link } from \"react-router-dom\"\r\nimport { getDrinkByName } from \"../service\"\r\nimport StyledGlass from \"./Glasses/StyledGlass\"\r\n\r\nconst DrinkByName = ({drinkbyname}) => {\r\n    // console.log(drinkbyname)\r\n    return (\r\n        <>\r\n        {drinkbyname.map(drink => <StyledGlass key={drink.strDrink}>\r\n            <Link to={`/categories/item/${drink.idDrink}`} >\r\n                    <p>{drink.strDrink}</p>\r\n                    <img src={`${drink.strDrinkThumb}/preview`} />\r\n\r\n                </Link>\r\n        </StyledGlass>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DrinkByName","import { Link } from \"react-router-dom\"\r\nimport StyledGlass from \"./Glasses/StyledGlass\"\r\n\r\nconst DrinksByLetter = ({ drinksbyletter }) => {\r\n    return (\r\n        <>\r\n            {drinksbyletter.map(drink => <StyledGlass key={drink.strDrink}>\r\n\r\n                <Link to={`/categories/item/${drink.idDrink}`} >\r\n                    <p>{drink.strDrink}</p>\r\n                    <img src={`${drink.strDrinkThumb}/preview`} alt=\"\" />\r\n\r\n                </Link>\r\n            </StyledGlass>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DrinksByLetter","import StyledCoctailInfo from \"./CocktailInfo/StyledCocktailInfo\"\r\n\r\nconst IngredientByName = ({ingredientbyname, ingredientimg}) => {\r\n    return (\r\n        <>\r\n         {ingredientbyname.map(ingredient => <StyledCoctailInfo key={ingredient.strIngredient}>\r\n                <p>{ingredient.strIngredient}</p>\r\n                <img src={ingredientimg} alt=\"\"/>\r\n                <p>{ingredient.strDescription}</p>\r\n            </StyledCoctailInfo>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IngredientByName","import styled from \"styled-components\";\r\n\r\nconst StyledSearch = styled.div`\r\n   display:flex;\r\n\r\n   div{\r\n       margin-left:20px;\r\n   }\r\n\r\n   label{\r\n       color:white;\r\n   }\r\n`\r\n\r\nexport default StyledSearch","import { useState } from \"react\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { getDrinkByName, getDrinksByFirstLetter, getIngredientImg, getIngredientInfo } from \"../service\"\r\nimport DrinkByName from \"./DrinkByName\"\r\nimport DrinksByLetter from \"./DrinksByLetter\"\r\nimport IngredientByName from \"./IngredientByName\"\r\nimport StyledSearch from './StyledSearch'\r\n\r\n\r\nconst SearchDrink = ({ user }) => {\r\n\r\n    const [drinkname, setDrinkName] = useState('')\r\n    const [drinkbyname, setDrinkByName] = useState([])\r\n\r\n    const [ingredientname, setIngredientName] = useState('')\r\n    const [ingredientbyname, setIngredientByName] = useState([])\r\n\r\n    const [ingredientimg, setIngredientImg] = useState()\r\n\r\n    const [letter, setLetter] = useState('')\r\n    const [drinksbyletter, setDrinksByLetter] = useState([])\r\n\r\n    return user ? (\r\n        <div>\r\n            <StyledSearch>\r\n            <div>\r\n                <label htmlFor=\"\">Enter drink name </label>\r\n                <input value={drinkname} type=\"text\" onChange={(e) => setDrinkName(e.target.value)} />\r\n                <button onClick={() => {\r\n                    getDrinkByName(drinkname).then(res => {\r\n                        setDrinkByName(res.data.drinks)\r\n\r\n                        setDrinkName('')\r\n                        setIngredientByName([])\r\n                        setDrinksByLetter([])\r\n                    })\r\n                }}>Search</button>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"\">Enter ingredient </label>\r\n                <input value={ingredientname} type=\"text\" onChange={(e) => setIngredientName(e.target.value)} />\r\n                <button onClick={() => {\r\n                    getIngredientInfo(ingredientname).then(res => {\r\n                        setIngredientByName(res.data.ingredients)\r\n\r\n\r\n                        getIngredientImg(ingredientname).then(res => {\r\n                            setIngredientImg(res.config.url)\r\n                        })\r\n                        setIngredientName('')\r\n                        setDrinkByName([])\r\n                        setDrinksByLetter([])\r\n                    })\r\n                }}>Search</button>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"\">Search drinks by first letter </label>\r\n                <input value={letter} maxLength={1} type=\"text\" onChange={(e) => setLetter(e.target.value)} />\r\n                <button onClick={() => {\r\n                    getDrinksByFirstLetter(letter).then(res => {\r\n                        setDrinksByLetter(res.data.drinks)\r\n\r\n                        setLetter('')\r\n                        setDrinkByName([])\r\n                        setIngredientByName([])\r\n                    })\r\n                }}>Search</button>\r\n            </div>\r\n            </StyledSearch>\r\n            <DrinkByName drinkbyname={drinkbyname} />\r\n            <IngredientByName ingredientbyname={ingredientbyname} ingredientimg={ingredientimg} />\r\n            <DrinksByLetter drinksbyletter={drinksbyletter} />\r\n        </div>\r\n    )\r\n        :\r\n        <Redirect to=\"/login\"></Redirect>\r\n}\r\n\r\nexport default SearchDrink","import { useEffect, useState } from \"react\"\nimport { getAllCategories, getAllGlasses, getAllIngredients, getByAlcohol } from \"./service\"\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport Categories from \"./components/Categories/Categories\"\nimport Category from \"./components/Categories/Category\"\nimport Glasses from \"./components/Glasses/Glasses\"\nimport Glass from \"./components/Glasses/Glass\"\nimport Ingredients from \"./components/Ingredients/Ingredients\"\nimport Ingredient from \"./components/Ingredients/Ingredient\"\nimport CocktailInfo from \"./components/CocktailInfo/CocktailInfo\"\nimport RandomCocktail from \"./components/RandomCocktail\"\nimport IngredientInfo from \"./components/IngredientInfo\"\nimport Login from \"./components/LoginRegister/Login\"\nimport Register from \"./components/LoginRegister/Register\"\nimport './main.css'\nimport Header from \"./components/Header/Header\"\nimport Alcoholic from \"./components/Alcoholics/Alcoholic\"\nimport Alcoholics from \"./components/Alcoholics/Alcoholics\"\nimport SearchDrink from \"./components/SearchDrink\"\n\n\n\n\nconst App = () => {\n\n  const [user, setUser] = useState(null)\n  const [categories, setCategories] = useState([])\n  const [glasses, setGlasses] = useState([])\n  const [ingredients, setIngredients] = useState([])\n  const [alcoholics, setAlcoholics] = useState([])\n\n  useEffect(() => {\n    getAllCategories().then(res => {\n      setCategories(res.data.drinks)\n    })\n  }, [])\n\n  useEffect(() => {\n    getAllGlasses().then(res => {\n      setGlasses(res.data.drinks)\n    })\n  }, [])\n\n  useEffect(() => {\n    getAllIngredients().then(res => {\n      setIngredients(res.data.drinks)\n    })\n  }, [])\n\n  useEffect(() => {\n    getByAlcohol().then(res => {\n      setAlcoholics(res.data.drinks)\n    })\n  }, [])\n\n\n\n  return (\n    <>\n      <Router basename={'/Zavrsni-projekat'}>\n        <Header user={user} setUser={setUser} />\n\n        <hr />\n\n        <Switch>\n\n          <Route path='/search'>\n            <SearchDrink user={user} />\n          </Route>\n\n          <Route path='/random'>\n            <RandomCocktail />\n          </Route>\n\n          <Route path=\"/login\">\n            <Login setUser={setUser} />\n          </Route>\n\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n\n          <Route path='/categories/item/:id'>\n            <CocktailInfo />\n          </Route>\n\n          <Route path='/categories/:category'>\n            <Category categories={categories} />\n          </Route>\n\n          <Route path='/categories'>\n            <Categories categories={categories} user={user} />\n          </Route>\n\n          <Route path='/glasses/:glass'>\n            <Glass />\n          </Route>\n\n          <Route path='/glasses'>\n            <Glasses glasses={glasses} user={user} />\n          </Route>\n\n          <Route path='/ingredients/info/:name'>\n            <IngredientInfo />\n          </Route>\n\n          <Route path='/ingredients/:ingredient'>\n            <Ingredient />\n          </Route>\n\n          <Route path='/ingredients'>\n            <Ingredients ingredients={ingredients} user={user} />\n          </Route>\n\n          <Route path='/alcoholics/:alcoholic'>\n            <Alcoholic />\n          </Route>\n\n          <Route path='/alcoholics'>\n            <Alcoholics alcoholics={alcoholics} user={user} />\n          </Route>\n\n          <Route path='/random'>\n            <RandomCocktail />\n          </Route>\n\n\n        </Switch>\n\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Css from '../src/' \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}